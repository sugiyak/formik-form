{"ast":null,"code":"var _jsxFileName = \"/Users/sugiyamakei/Desktop/mit_pro/week_13/build-a-formik-form_starter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFormik } from \"formik\"; // TODO: import useFormik from formik library\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // TODO: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: values => {\n      console.log('form:', values);\n      if (!errors) alert(\"Login Successful\");\n    },\n    validate: values => {\n      let errors = {};\n\n      if (!values.email) {\n        errors.email = 'Field Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = 'Username should be an email';\n      }\n\n      if (!values.password) {\n        errors.password = 'Field required';\n      }\n\n      return errors;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: [formik.errors.email, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 32\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: [formik.errors.password, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 35\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sugiyamakei/Desktop/mit_pro/week_13/build-a-formik-form_starter/src/App.js"],"names":["React","useFormik","App","formik","initialValues","email","password","onSubmit","values","console","log","errors","alert","validate","test","handleSubmit","handleChange","color"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,QAA1B,C,CACA;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAMC,MAAM,GAAGF,SAAS,CAAC;AACvBG,IAAAA,aAAa,EAAE;AACbC,MAAAA,KAAK,EAAE,EADM;AAEbC,MAAAA,QAAQ,EAAE;AAFG,KADQ;AAKvBC,IAAAA,QAAQ,EAAEC,MAAM,IAAG;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,MAArB;AACA,UAAG,CAACG,MAAJ,EAAWC,KAAK,CAAC,kBAAD,CAAL;AACZ,KARsB;AASvBC,IAAAA,QAAQ,EAAEL,MAAM,IAAI;AAClB,UAAIG,MAAM,GAAG,EAAb;;AACA,UAAI,CAACH,MAAM,CAACH,KAAZ,EAAmB;AAChBM,QAAAA,MAAM,CAACN,KAAP,GAAe,gBAAf;AACA,OAFH,MAES,IACL,CAAC,2CAA2CS,IAA3C,CAAgDN,MAAM,CAACH,KAAvD,CADI,EAEH;AACAM,QAAAA,MAAM,CAACN,KAAP,GAAe,6BAAf;AACD;;AACL,UAAI,CAACG,MAAM,CAACF,QAAZ,EAAsB;AAChBK,QAAAA,MAAM,CAACL,QAAP,GAAkB,gBAAlB;AACD;;AACL,aAAOK,MAAP;AAGD;AAxBsB,GAAD,CAAxB;AA2BA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAER,MAAM,CAACY,YAAvB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC,MAAzB;AAAgC,QAAA,QAAQ,EAAEZ,MAAM,CAACa,YAAjD;AAA+D,QAAA,KAAK,EAAEb,MAAM,CAACK,MAAP,CAAcH;AAApF;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGF,MAAM,CAACQ,MAAP,CAAcN,KAAd,gBAAsB;AAAK,QAAA,KAAK,EAAE;AAACY,UAAAA,KAAK,EAAC;AAAP,SAAZ;AAAA,mBAA4Bd,MAAM,CAACQ,MAAP,CAAcN,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,cAAtB,GAA+E,IAHlF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,MAA5B;AAAmC,QAAA,QAAQ,EAAEF,MAAM,CAACa,YAApD;AAAkE,QAAA,KAAK,EAAEb,MAAM,CAACK,MAAP,CAAcF;AAAvF;AAAA;AAAA;AAAA;AAAA,cALF,EAMGH,MAAM,CAACQ,MAAP,CAAcL,QAAd,gBAAyB;AAAK,QAAA,KAAK,EAAE;AAACW,UAAAA,KAAK,EAAC;AAAP,SAAZ;AAAA,mBAA4Bd,MAAM,CAACQ,MAAP,CAAcL,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,cAAzB,GAAqF,IANxF,eAOE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA1CQJ,G;UAEQD,S;;;KAFRC,G;AA4CT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\n// TODO: import useFormik from formik library\n\nfunction App() {\n  // TODO: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''      \n    },\n    onSubmit: values =>{\n      console.log('form:', values);\n      if(!errors)alert(\"Login Successful\")\n    },\n    validate: values => {\n      let errors = {};\n      if (!values.email) {\n         errors.email = 'Field Required';\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n          ) {\n            errors.email = 'Username should be an email';\n          }\n      if (!values.password) {\n            errors.password = 'Field required';\n          }\n      return errors;\n      \n\n    }\n  })\n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n        <div>username</div>\n        <input name=\"email\" type=\"text\" onChange={formik.handleChange} value={formik.values.email}/>\n        {formik.errors.email ? <div style={{color:'red'}}>{formik.errors.email} </div>: null}\n        <div>password</div>\n        <input name=\"password\" type=\"text\" onChange={formik.handleChange} value={formik.values.password}/>\n        {formik.errors.password ? <div style={{color:'red'}}>{formik.errors.password} </div>: null}\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}